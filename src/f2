#!/bin/bash
# I thought this would be cool
# sometimes domain:port is accessible but domain also sits behind WAF
# and nmap/masscan may not detect it ;)

#!/bin/bash

f2() {
  COMMON_PORTS="80,443,8000,8080,8443,3000,5000,8888,7001,2082,2096,9000,10000,5601,8181,6543"
  TMP_DIR="f2"
  mkdir -p "$TMP_DIR"
  ALIVE="$TMP_DIR/alive.txt"

  if [ $# -lt 1 ]; then
    echo "Usage:"
    echo "  f2 subs.txt              # scan subdomains (common ports)"
    echo "  f2 subs.txt -f           # scan subdomains (full ports)"
    echo "  f2 -d domain.com         # scan single domain (common ports)"
    echo "  f2 -d domain.com -f      # scan single domain (full ports)"
    return 1
  fi

  FULL=false
  TARGETS=()

  if [[ "$1" == "-d" ]]; then
    if [ -z "$2" ]; then echo "Missing domain"; return 1; fi
    TARGETS+=("$2")
    [ "$3" == "-f" ] && FULL=true
  else
    while read -r line; do
      TARGETS+=("$line")
    done < "$1"
    [ "$2" == "-f" ] && FULL=true
  fi

  echo "[*] Scanning with naabu..."
  > "$TMP_DIR/naabu_out.txt"
  for target in "${TARGETS[@]}"; do
    if $FULL; then
      naabu -host "$target" -p - -rate 7000 -silent >> "$TMP_DIR/naabu_out.txt"
    else
      naabu -host "$target" -p "$COMMON_PORTS" -rate 7000 -silent >> "$TMP_DIR/naabu_out.txt"
    fi
  done

  echo "[*] Checking HTTP services with httpx..."
  httpx -silent -title -status-code < "$TMP_DIR/naabu_out.txt" > "$ALIVE"

  echo "[+] Alive HTTP services:"
  cat "$ALIVE"
}
