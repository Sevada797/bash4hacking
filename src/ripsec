# Define the ripsec function
ripsec() {
    # Check if the file exists
    if [[ ! -f "$1" ]]; then
        echo "Error: File $1 not found!"
        return 1
    fi

    # Define filenames for sensitive files
    sensitive_files=(
"/tmp/"
"/etc/"
"\.env"
"\.git"
"\.htaccess"
"\.htpasswd"
"phpinfo\.php"
"config\.php"
"database\.yml"
"web\.config"
"wp-config\.php"
"settings\.py"
"config\.json"
"credentials\.json"
"id_rsa"
"id_rsa\.pub"
"docker-compose\.yml"
"Dockerfile"
"package\.json"
"composer\.json"
"secrets\.yml"
"\.bashrc"
"\.bash_profile"
"\.ssh/authorized_keys"
"\.ssh/known_hosts"
"backup\.sql"
"backup\.zip"
"backup\.tar\.gz"
"log\.txt"
"error\.log"
"/admin/"
"/administrator/"
"/backup/"
"/data/"
"/logs/"
"/config/"
"/uploads/"
"/private/"
"/secrets/"
"/tmp/"
"/var/"
"/etc/"
"/lib/"
"/cgi-bin/"
"/scripts/"
"/secure/"
"/db/"
"/sql/"
"/app/"
"/env/"
"web\.config"
"appsettings\.json"
"machine\.config"
"global\.asax"
"IISAdmin"
"IISHelp"
"iisstart\.htm"
"pagerror\.gif"
"aspnet_client"
"scripts"
"bin"
"App_Data"
"App_Code"
"App_GlobalResources"
"App_LocalResources"
"App_Themes"
"App_WebReferences"
"trace\.axd"
"elmah\.axd"
"services\.asmx"
"service\.svc"
"*\.bak"
"*\.old"
"*\.tmp"
"*\.log"
"default\.aspx"
"index\.aspx"
"default\.htm"
"index\.htm"
"admin"
"admin\.aspx"
"administrator"
"backup"
"config"
"logs"

    )

    # Construct the grep pattern
    pattern=$(printf "|%s" "${sensitive_files[@]}")
    pattern="${pattern:1}" # Remove leading |

    # Grep the file for sensitive filenames
    grep -E "($pattern)" "$1"
}
