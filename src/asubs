asubs() {
  local targets=$1
  if [[ -z "$targets" ]]; then
    echo "Usage: asubs <target_domains_file>"
    return 1
  fi

  local subsgathered="${targets}subs"
  local tmp="tmp$(openssl rand -hex 10)"
  local tmp_dead="tmp$(openssl rand -hex 8)"

  echo "[*] Gathering subdomains from assetfinder & subfinder..."
  cat "$targets" | assetfinder >> "$subsgathered"
  subfinder -dL "$targets" -silent >> "$subsgathered"
  subr "$targets">>"$subsgathered"

  echo "[*] Adding main domains (critical patch)..."
  cat "$targets" >> "$subsgathered"

  echo "[*] Resolving live subdomains with httpx-go..."
  httpx-go -l "$subsgathered" -silent > "$tmp"
  
  echo "[*] Extracting dead subs..."
  comm -23 <(sort "$subsgathered") <(sort "$tmp") > "$tmp_dead"
  ## get the tmp back to original
  mv "$tmp" "$subsgathered"
  echo "[*] Extracting CN's from dead subs..."
  subs443 "$tmp_dead" | httpx-go -silent | sort -u>>"$tmp"

  echo "[*] Filtering in-scope subdomains..."
  grep -F -f "$targets" "$subsgathered" | sort -u > "$tmp"
  mv "$tmp" "$subsgathered"
  sed -i 's|^https://||' "$subsgathered" && sed -i 's|^http://||' "$subsgathered"
  rm "$tmp_dead"
}
